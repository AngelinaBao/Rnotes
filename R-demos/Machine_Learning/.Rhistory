library("data.table", lib.loc="~/R/win-library/3.5")
detach("package:data.table", unload=TRUE)
# Data Preprocessing
library(data.table)
library(xgboost)
install.packages("xgboost")
?xgboost
help(package = xgboost)
library(xgboost)
data(agaricus.train, package=xgboost)
data(agaricus.train)
data(agaricus.test)
View(agaricus.test)
train <- agaricus.train
test <- agaricus.test
bst <- xgboost
bst <- xgboost(data = train$data, label = train$label, max_depth = 2, eta = 1,
nrounds = 2, objective = "binary:logistic")
xgb.save(bst, 'model.save')
bst = xgb.load('model.save')
pred <- predict(bst, test$data)
head(pred)
head(test$data)
head(mpg)
#Graphics for communication
library(ggrepel)
library(viridis)
library(tidyverse)
library(data.table)
head(mpg)
# Zooming
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = class)) +
geom_smooth() +
coord_cartesian(xlim = c(5, 7), ylim = c(10, 30))
mpg %>%
filter(displ >= 5, displ <= 7, hwy >= 10, hwy <=30) %>%
ggplot(aes(displ, hwy)) +
geom_point(aes(color = class)) +
geom_smooth()
head(mpg$class)
tail(mpg$class)
#Reducing the limits is basically equivalent to subsetting the data
compact <- mpg[, class == "compact"]
#Reducing the limits is basically equivalent to subsetting the data
compact <- mpg[class == "compact"]
#Reducing the limits is basically equivalent to subsetting the data
compact <- mpg[class == "compact",]
library("data.table", lib.loc="~/R/win-library/3.5")
#Reducing the limits is basically equivalent to subsetting the data
compact <- mpg[class == "compact"]
#Reducing the limits is basically equivalent to subsetting the data
compact <- mpg[class == "compact",]
library(data.table)
#Reducing the limits is basically equivalent to subsetting the data
compact <- mpg[class == "compact"]
#Reducing the limits is basically equivalent to subsetting the data
mpg <- as.data.table(mpg)
compact <- mpg[class == "compact"]
#or
compact %>% filter(class == "compact")
#or
compact <- compact %>% filter(class == "compact")
#or
#compact <- mpg %>% filter(class == "compact")
suv <- mpg %>% filter(class == "suv")
head(mpg)
ggplot(compact, aes(displ, hwy), color = drv) +
geom_point()
ggplot(compact, aes(displ, hwy, color = drv)) +
geom_point()
ggplot(suv, aes(displ, hwy, color = drv)) +
geom_point()
par(mfrow = c(2, 1))
ggplot(compact, aes(displ, hwy, color = drv)) +
geom_point()
ggplot(suv, aes(displ, hwy, color = drv)) +
geom_point()
par(mfrow = c(2,2))     #将作图区域分为四块，也可以用layout()
attach(mtcars)     #绑定数据框mtcars，后面就可以直接使用列名，无需用$
hist(mpg)       #简单直方图
hist(mtcars$mpg)       #简单直方图
hist(mtcars$mpg)       #简单直方图
#指定了分组、颜色、x轴坐标和标题的直方图
hist(mpg, breaks = 12, col = "Red", xlab = "Miles Per Gallon", main = "Histogram of mpg")
#指定了分组、颜色、x轴坐标和标题的直方图
hist(mtcars$mpg, breaks = 12, col = "Red", xlab = "Miles Per Gallon", main = "Histogram of mpg")
ggplot(compact, aes(displ, hwy, color = drv)) +
geom_point()
ggplot(suv, aes(displ, hwy, color = drv)) +
geom_point()
?par
par(mfrow = c(1, 2))
ggplot(compact, aes(displ, hwy, color = drv)) +
geom_point()
ggplot(suv, aes(displ, hwy, color = drv)) +
geom_point()
# Zooming
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = class)) +
geom_smooth() +
coord_cartesian(xlim = c(5, 7), ylim = c(10, 30))
mpg %>%
filter(displ >= 5, displ <= 7, hwy >= 10, hwy <=30) %>%
ggplot(aes(displ, hwy)) +
geom_point(aes(color = class)) +
geom_smooth()
par(mfrow = c(1, 2))
ggplot(compact, aes(displ, hwy, color = drv)) +
geom_point() +
coord_cartesian(xlim = c(2, 2.5), ylim = c(25, 30))
#One way to overcome this problem is to share scales across multiple plots,
#training the scales with the limits of the full data
x_scale <- scale_x_continuous(limits = range(mpg$displ))
y_scale <- scale_y_continuous(limits = range(mpg$hwy))
color_scale <- scale_color_continuous(limits = range(mpg$drv))
ggplot(suv, aes(displ, hwy)) +
geom_point() +
x_scale +
y_scale +
color_scale
color_scale <- scale_color_continuous(limits = unique(mpg$drv))
ggplot(suv, aes(displ, hwy)) +
geom_point() +
x_scale +
y_scale +
color_scale
x_scale <- scale_x_continuous(limits = range(mpg$displ))
y_scale <- scale_y_continuous(limits = range(mpg$hwy))
col_scale <- scale_colour_discrete(limits = unique(mpg$drv))
ggplot(suv, aes(displ, hwy, colour = drv)) +
geom_point() +
x_scale +
y_scale +
col_scale
ggplot(compact, aes(displ, hwy, colour = drv)) +
geom_point() +
x_scale +
y_scale +
col_scale
ggplot(suv, aes(displ, hwy)) +
geom_point() +
x_scale +
y_scale +
color_scale
ggplot(suv, aes(displ, hwy, color = drv)) +
geom_point() +
x_scale +
y_scale +
color_scale
#One way to overcome this problem is to share scales across multiple plots,
#training the scales with the limits of the full data
x_scale <- scale_x_continuous(limits = range(mpg$displ))
y_scale <- scale_y_continuous(limits = range(mpg$hwy))
color_scale <- scale_color_continuous(limits = unique(mpg$drv))
ggplot(suv, aes(displ, hwy, color = drv)) +
geom_point() +
x_scale +
y_scale +
color_scale
x_scale <- scale_x_continuous(limits = range(mpg$displ))
y_scale <- scale_y_continuous(limits = range(mpg$hwy))
col_scale <- scale_colour_discrete(limits = unique(mpg$drv))
ggplot(suv, aes(displ, hwy, colour = drv)) +
geom_point() +
x_scale +
y_scale +
col_scale
ggplot(compact, aes(displ, hwy, color = drv)) +
geom_point() +
x_scale +
y_scale +
color_scale
color_scale <- scale_color_discrete(limits = unique(mpg$drv))
ggplot(suv, aes(displ, hwy, color = drv)) +
geom_point() +
x_scale +
y_scale +
color_scale
ggplot(compact, aes(displ, hwy, color = drv)) +
geom_point() +
x_scale +
y_scale +
color_scale
par(mfrow = c(1, 2))
ggplot(suv, aes(displ, hwy, color = drv)) +
geom_point() +
x_scale +
y_scale +
color_scale
ggplot(compact, aes(displ, hwy, color = drv)) +
geom_point() +
x_scale +
y_scale +
color_scale
par(mfrow = c(1, 2))
ggplot(suv, aes(displ, hwy, color = drv)) +
geom_point() +
x_scale +
y_scale +
color_scale
ggplot(compact, aes(displ, hwy, color = drv)) +
geom_point() +
x_scale +
y_scale +
color_scale
#or
mpg1 <- mpg[, class %in% c("compact", "suv")]
ggplot(mpg1, aes(displ, hwy, color = drv)) +
geom_point() +
facet_wrap(~ class, nrow = 2)
#or
mpg1 <- mpg[class %in% c("compact", "suv")]
ggplot(mpg1, aes(displ, hwy, color = drv)) +
geom_point() +
facet_wrap(~ class, nrow = 2)
ggplot(mpg1, aes(displ, hwy, color = drv)) +
geom_point() +
facet_wrap(~ class, nrow = 1)
#Themes
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = class)) +
geom_smooth(se = FALSE)
#Themes
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = class)) +
geom_smooth(se = FALSE) +
theme_bw()
#Themes
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = class)) +
geom_smooth(se = FALSE) +
theme_gray()
#Themes
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = class)) +
geom_smooth(se = FALSE) +
theme_light()
#Themes
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = class)) +
geom_smooth(se = FALSE) +
theme_bw()
#Themes
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = class)) +
geom_smooth(se = FALSE) +
theme_classic()
#Themes
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = class)) +
geom_smooth(se = FALSE) +
theme_bw()
ggsave("my_plot.pdf")
setwd()
getwd()
ggsave("C:\\Users\\1000257489\\Documents\\Angelina\\GitHub\\Rnotes\\R-demos\\packages\\my_plot.pdf")
rm(list = ls())
gc()
?geom_smooth
library(ggplot2)
head(mpg)
data(mpg)
head(mpg)
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = drv)) +
geom_smooth()
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = drv)) +
geom_smooth(se = FALSE)
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = drv)) +
geom_smooth(se = FALSE) +
coord_cartesian()
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = drv)) +
geom_smooth(se = FALSE) +
coord_cartesian(xlim = c(1, 7), ylim = c(0, 45))
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = drv)) +
geom_smooth(se = FALSE) +
coord_cartesian(xlim = c(1, 7), ylim = c(10, 45))
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = drv)) +
geom_smooth(se = FALSE) +
coord_cartesian(xlim = c(1.5, 7), ylim = c(10, 45))
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = drv)) +
geom_smooth(se = FALSE) +
coord_cartesian(xlim = c(1.5, 7), ylim = c(10, 45)) +
facet_wrap(~ class, nrow = 2)
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = drv)) +
geom_smooth(se = FALSE) +
coord_cartesian(xlim = c(1.5, 7), ylim = c(10, 45)) +
facet_wrap(~ class, nrow = 3)
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = drv)) +
geom_smooth(se = FALSE) +
coord_cartesian(xlim = c(1.5, 7), ylim = c(10, 45)) +
facet_wrap(~ class, nrow = 4)
head(mpg)
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = drv)) +
geom_smooth(se = FALSE) +
coord_cartesian(xlim = c(1.5, 7), ylim = c(10, 45)) +
facet_grid(drv ~ class)
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = drv)) +
geom_smooth(se = FALSE) +
coord_cartesian(xlim = c(1.5, 7), ylim = c(10, 45)) +
facet_grid(class ~ drv)
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = drv)) +
geom_smooth(se = FALSE) +
coord_cartesian(xlim = c(1.5, 7), ylim = c(10, 45)) +
facet_grid(~ class, nrow = 4)
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = drv)) +
geom_smooth(se = FALSE) +
coord_cartesian(xlim = c(1.5, 7), ylim = c(10, 45)) +
facet_wrap(~ class, nrow = 4)
?mpg
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = drv)) +
geom_smooth(se = FALSE) +
coord_cartesian(xlim = c(1.5, 7), ylim = c(10, 45)) +
facet_wrap(~ class, nrow = 4) +
labs(title = "displ vs hwy in mpg",
x = "displ(in litres)",
y = "hwy(highway miles per gallon)",
caption = "based on data from mpg in ggplot2 package") +
theme_bw()
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = drv)) +
geom_smooth(se = FALSE) +
coord_cartesian(xlim = c(1.5, 7), ylim = c(10, 45)) +
facet_wrap(~ class, nrow = 4) +
labs(title = "displ vs hwy in mpg",
x = "displ(in litres)",
y = "hwy(highway miles per gallon)",
caption = "based on data from mpg in ggplot2 package") +
theme(legend.position = "bottom") +
theme_bw()
mpg <- mpg %>% filter(class %in% c("suv", "compact", "subcompact"))
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = drv)) +
geom_smooth(se = FALSE) +
coord_cartesian(xlim = c(1.5, 7), ylim = c(10, 45)) +
facet_wrap(~ class, nrow = 4) +
labs(title = "displ vs hwy in mpg",
x = "displ(in litres)",
y = "hwy(highway miles per gallon)",
caption = "based on data from mpg in ggplot2 package") +
theme(legend.position = "bottom") +
theme_bw()
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = drv)) +
geom_smooth(se = FALSE) +
coord_cartesian(xlim = c(1.5, 7), ylim = c(10, 45)) +
facet_wrap(~ class, nrow = 3) +
labs(title = "displ vs hwy in mpg",
x = "displ(in litres)",
y = "hwy(highway miles per gallon)",
caption = "based on data from mpg in ggplot2 package") +
theme(legend.position = "bottom") +
theme_bw()
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = drv)) +
geom_smooth(se = FALSE) +
coord_cartesian(xlim = c(1.5, 7), ylim = c(10, 45)) +
facet_wrap(~ class, nrow = 3) +
labs(title = "displ vs hwy in mpg",
x = "displ(in litres)",
y = "hwy(highway miles per gallon)",
caption = "based on data from mpg in ggplot2 package",
color = "DRV") +
theme(legend.position = "bottom") +
theme_bw()
?theme
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = drv)) +
geom_smooth(se = FALSE) +
coord_cartesian(xlim = c(1.5, 7), ylim = c(10, 45)) +
facet_wrap(~ class, nrow = 3) +
labs(title = "displ vs hwy in mpg",
x = "displ(in litres)",
y = "hwy(highway miles per gallon)",
caption = "based on data from mpg in ggplot2 package",
color = "DRV") +
theme_bw()
